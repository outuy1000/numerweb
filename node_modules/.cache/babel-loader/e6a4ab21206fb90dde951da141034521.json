{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\outuy\\\\Desktop\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\outuy\\\\Desktop\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Spline(xs, ys) {\n    _classCallCheck(this, Spline);\n\n    this.xs = xs;\n    this.ys = ys;\n    this.ks = this.getNaturalKs(new Float64Array(this.xs.length));\n  }\n\n  _createClass(Spline, [{\n    key: \"getNaturalKs\",\n    value: function getNaturalKs(ks) {\n      var n = this.xs.length - 1;\n      var A = zerosMat(n + 1, n + 2);\n\n      for (var i = 1; i < n; i++ // rows\n      ) {\n        A[i][i - 1] = 1 / (this.xs[i] - this.xs[i - 1]);\n        A[i][i] = 2 * (1 / (this.xs[i] - this.xs[i - 1]) + 1 / (this.xs[i + 1] - this.xs[i]));\n        A[i][i + 1] = 1 / (this.xs[i + 1] - this.xs[i]);\n        A[i][n + 1] = 3 * ((this.ys[i] - this.ys[i - 1]) / ((this.xs[i] - this.xs[i - 1]) * (this.xs[i] - this.xs[i - 1])) + (this.ys[i + 1] - this.ys[i]) / ((this.xs[i + 1] - this.xs[i]) * (this.xs[i + 1] - this.xs[i])));\n      }\n\n      A[0][0] = 2 / (this.xs[1] - this.xs[0]);\n      A[0][1] = 1 / (this.xs[1] - this.xs[0]);\n      A[0][n + 1] = 3 * (this.ys[1] - this.ys[0]) / ((this.xs[1] - this.xs[0]) * (this.xs[1] - this.xs[0]));\n      A[n][n - 1] = 1 / (this.xs[n] - this.xs[n - 1]);\n      A[n][n] = 2 / (this.xs[n] - this.xs[n - 1]);\n      A[n][n + 1] = 3 * (this.ys[n] - this.ys[n - 1]) / ((this.xs[n] - this.xs[n - 1]) * (this.xs[n] - this.xs[n - 1]));\n      return solve(A, ks);\n    }\n    /**\n     * inspired by https://stackoverflow.com/a/40850313/4417327\n     */\n\n  }, {\n    key: \"getIndexBefore\",\n    value: function getIndexBefore(target) {\n      var low = 0;\n      var high = this.xs.length;\n      var mid = 0;\n\n      while (low < high) {\n        mid = Math.floor((low + high) / 2);\n\n        if (this.xs[mid] < target && mid !== low) {\n          low = mid;\n        } else if (this.xs[mid] >= target && mid !== high) {\n          high = mid;\n        } else {\n          high = low;\n        }\n      }\n\n      return low + 1;\n    }\n  }, {\n    key: \"at\",\n    value: function at(x) {\n      var i = this.getIndexBefore(x);\n      var t = (x - this.xs[i - 1]) / (this.xs[i] - this.xs[i - 1]);\n      var a = this.ks[i - 1] * (this.xs[i] - this.xs[i - 1]) - (this.ys[i] - this.ys[i - 1]);\n      var b = -this.ks[i] * (this.xs[i] - this.xs[i - 1]) + (this.ys[i] - this.ys[i - 1]);\n      var q = (1 - t) * this.ys[i - 1] + t * this.ys[i] + t * (1 - t) * (a * (1 - t) + b * t);\n      return q;\n    }\n  }]);\n\n  return Spline;\n}();\n\nfunction solve(A, ks) {\n  var m = A.length;\n  var h = 0;\n  var k = 0;\n\n  while (h < m && k <= m) {\n    var i_max = 0;\n    var max = -Infinity;\n\n    for (var i = h; i < m; i++) {\n      var _v = Math.abs(A[i][k]);\n\n      if (_v > max) {\n        i_max = i;\n        max = _v;\n      }\n    }\n\n    if (A[i_max][k] === 0) {\n      k++;\n    } else {\n      swapRows(A, h, i_max);\n\n      for (var _i = h + 1; _i < m; _i++) {\n        var f = A[_i][k] / A[h][k];\n        A[_i][k] = 0;\n\n        for (var j = k + 1; j <= m; j++) {\n          A[_i][j] -= A[h][j] * f;\n        }\n      }\n\n      h++;\n      k++;\n    }\n  }\n\n  for (var _i2 = m - 1; _i2 >= 0; _i2-- // rows = columns\n  ) {\n    var v = 0;\n\n    if (A[_i2][_i2]) {\n      v = A[_i2][m] / A[_i2][_i2];\n    }\n\n    ks[_i2] = v;\n\n    for (var _j = _i2 - 1; _j >= 0; _j-- // rows\n    ) {\n      A[_j][m] -= A[_j][_i2] * v;\n      A[_j][_i2] = 0;\n    }\n  }\n\n  return ks;\n}\n\nfunction zerosMat(r, c) {\n  var A = [];\n\n  for (var i = 0; i < r; i++) {\n    A.push(new Float64Array(c));\n  }\n\n  return A;\n}\n\nfunction swapRows(m, k, l) {\n  var p = m[k];\n  m[k] = m[l];\n  m[l] = p;\n}","map":null,"metadata":{},"sourceType":"script"}
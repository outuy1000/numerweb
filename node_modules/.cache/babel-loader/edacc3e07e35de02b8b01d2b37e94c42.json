{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = {\n    order: 2,\n    precision: 2,\n    period: null\n  };\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n    return 1 - sse / ssyy;\n  }\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n\n\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n\n\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n\n\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n        var c = [];\n\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n\n          c.push(b);\n          b = 0;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      var string = 'y = ';\n\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});","map":{"version":3,"sources":["C:/Users/outuy/Desktop/Web_Numer-main/node_modules/regression/dist/regression.js"],"names":["global","factory","define","amd","exports","module","mod","regression","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","data","results","predictions","observations","forEach","d","push","sum","reduce","a","observation","mean","ssyy","difference","sse","accum","index","prediction","residual","gaussianElimination","input","matrix","n","coefficients","maxrow","j","Math","abs","k","tmp","_j","_k","_j2","total","_k2","round","number","factor","pow","methods","linear","options","len","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","log","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","l","c","_l","v","coeff","_i","concat","reverse","createWrapper","accumulator","name","_round","supplied","keys"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n"]},"metadata":{},"sourceType":"script"}
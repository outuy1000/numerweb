{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\outuy\\\\Desktop\\\\Web_Numer-main\\\\src\\\\Compute.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst math = require(\"mathjs\");\n\nvar regression = require('regression');\n\nvar interpolationQuadratic_Poly_linear = require('interpolating-polynomial');\n\nconst Spline = require('cubic-spline');\n\nfunction checkX(equation) {\n  equation = equation.replaceAll('X', 'x');\n  return equation;\n}\n\nexport function copyArray(n, matrix1) {\n  let arr = [];\n\n  for (let i = 0; i < n; i++) {\n    arr.push([]);\n    arr[i] = [].concat(matrix1[i]);\n  }\n\n  return arr;\n}\nexport function bisectioncal(init_fx, init_xl, init_xr, init_error) {\n  let fx = checkX(init_fx);\n  fx = math.parse(fx).compile();\n  let xl = math.bignumber(init_xl);\n  let xr = math.bignumber(init_xr);\n  let error = math.bignumber(init_error);\n  let xm = math.divide(math.add(xl, xr), 2);\n  let checkValue = math.multiply(fx.evaluate({\n    x: xm\n  }), fx.evaluate({\n    x: xr\n  }));\n  let checkError = math.bignumber(Number.MAX_VALUE);\n  let newXm = 0;\n  let data = [];\n  let iteration = 1;\n\n  if (checkValue > 0) {\n    xr = xm;\n  } else if (checkValue < 0) {\n    xl = xm;\n  }\n\n  data.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set_center_by_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Iteration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Xm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this));\n\n  while (math.larger(checkError, error)) {\n    newXm = math.divide(math.add(xl, xr), 2);\n    checkValue = math.multiply(fx.evaluate({\n      x: newXm\n    }), fx.evaluate({\n      x: xr\n    }));\n\n    if (checkValue > 0) {\n      xr = newXm;\n    } else if (checkValue < 0) {\n      xl = newXm;\n    }\n\n    checkError = math.abs(math.divide(math.subtract(newXm, xm), newXm));\n    xm = newXm;\n    data.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_center_by_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: iteration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: xm.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: checkError.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this));\n    iteration = iteration + 1;\n  }\n\n  return data;\n}\nexport function falsepositioncal(init_fx, init_xl, init_xr, init_error) {\n  let equation = checkX(init_fx);\n  equation = math.parse(equation).compile();\n  let xl = math.bignumber(init_xl);\n  let xr = math.bignumber(init_xr);\n  let error = math.bignumber(init_error);\n  let arr = [];\n  let i = 1;\n  let oldX1 = 0;\n  let checkError = 9999;\n  arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set_center_by_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Iteration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"X1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this));\n\n  while (checkError > error) {\n    let fXL = equation.evaluate({\n      x: xl\n    });\n    let fXR = equation.evaluate({\n      x: xr\n    });\n    let x1 = math.divide(math.subtract(math.multiply(xl, fXR), math.multiply(xr, fXL)), math.subtract(fXR, fXL));\n    let fx1 = equation.evaluate({\n      x: x1\n    });\n    let check = math.multiply(fx1, fXR);\n\n    if (check >= 0) {\n      xr = x1;\n    } else {\n      xl = x1;\n    }\n\n    checkError = math.abs((x1 - oldX1) / x1);\n    oldX1 = x1;\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_center_by_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: x1.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: checkError.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this));\n    i++;\n  }\n\n  return arr;\n}\nexport function onepointcal(init_fx, init_x, init_error) {\n  let equation = checkX(init_fx);\n  equation = math.parse(equation).compile();\n  let X = math.bignumber(init_x);\n  let error = math.bignumber(init_error);\n  let arr = [];\n  let i = 1;\n  let oldX = 0;\n  let checkError = 9999;\n  let oldcheckError = 9999;\n  arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set_center_by_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Iteration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this));\n\n  while (checkError > error) {\n    X = equation.evaluate({\n      x: X\n    });\n    checkError = math.abs((X - oldX) / X);\n    console.log(checkError);\n    console.log(oldcheckError);\n\n    if (checkError > oldcheckError) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_center_by_app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: \"ลู่ออก\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: checkError.toFixed(15).toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this));\n      break;\n    }\n\n    oldcheckError = checkError;\n    oldX = X;\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_center_by_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: X.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: checkError.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this));\n    i++;\n  }\n\n  return arr;\n}\nexport function newton_raphsoncal(init_fx, init_x, init_error) {\n  let equation = checkX(init_fx);\n  equation = math.parse(equation);\n  let X = math.bignumber(init_x);\n  let fXprime = math.derivative(equation, 'x').compile();\n  let error = math.bignumber(init_error);\n  let arr = [];\n  let i = 1;\n  let oldX = X;\n  let checkError = 9999;\n  let oldcheckError = 9999;\n  arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set_center_by_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Iteration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this));\n\n  while (checkError > error) {\n    let fXdiff = fXprime.evaluate({\n      x: X\n    });\n    let fX = equation.evaluate({\n      x: X\n    });\n    X = math.subtract(X, math.divide(fX, fXdiff));\n    checkError = math.abs((X - oldX) / X);\n\n    if (checkError > oldcheckError) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_center_by_app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: \"ลู่ออก\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: checkError.toFixed(15).toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this));\n      break;\n    }\n\n    oldcheckError = checkError;\n    oldX = X;\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_center_by_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: X.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: checkError.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this));\n    i++;\n  }\n\n  return arr;\n}\nexport function secantcal(init_fx, init_x0, init_x1, init_error) {\n  let equation = checkX(init_fx);\n  equation = math.parse(equation).compile();\n  let x0 = math.bignumber(init_x0);\n  let x1 = math.bignumber(init_x1);\n  let fx0 = equation.evaluate({\n    x: x0\n  });\n  let fx1 = equation.evaluate({\n    x: x1\n  });\n  let error = math.bignumber(init_error);\n  let arr = [];\n  let i = 1;\n  let oldX = 0;\n  let checkError = 9999;\n  let oldcheckError = 9999;\n  arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set_center_by_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Iteration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_head_result\",\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this));\n\n  while (checkError > error) {\n    let x = math.subtract(x1, math.divide(math.multiply(fx1, math.subtract(x0, x1)), math.subtract(fx0, fx1)));\n    checkError = Math.abs((x - x1) / x);\n    fx0 = fx1;\n    x0 = x1;\n    x1 = x;\n    fx1 = equation.evaluate({\n      x: x1\n    });\n\n    if (checkError > oldcheckError) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_center_by_app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: \"ลู่ออก\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_result_by_app\",\n          children: checkError.toFixed(15).toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this));\n      break;\n    }\n\n    oldcheckError = checkError;\n    oldX = x;\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set_center_by_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: x.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_result_by_app\",\n        children: checkError.toFixed(15).toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this));\n    i++;\n  }\n\n  return arr;\n}\nexport function cramercal(n, initialMatrix1, initialMatrix2) {\n  let matrix1 = math.bignumber(initialMatrix1);\n  let matrix2 = math.bignumber(initialMatrix2);\n  let det_matrixA = math.det(matrix1);\n  let temp_matrix1 = copyArray(n, matrix1);\n  let arr = [];\n  let X = [];\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      temp_matrix1[j][i] = matrix2[j];\n    }\n\n    X[i] = math.divide(math.det(temp_matrix1), det_matrixA).toFixed(15).toString();\n    /* arr.push({key : i , x : 'X'+(i+1) ,valuex : X[i]}) */\n\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ['X' + (i + 1) + ' = ', \" \", X[i]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 22\n    }, this));\n    temp_matrix1 = copyArray(n, matrix1);\n  }\n\n  return arr;\n}\nexport function Gauss_Elimination_cal(n, initialMatrix1, initialMatrix2) {\n  let matrix1 = initialMatrix1;\n  let matrix2 = initialMatrix2;\n  let arr = [];\n  let X = [];\n\n  for (let i = 0; i < n; i++) {\n    matrix1[i].push(matrix2[i]);\n    X.push(1);\n  }\n\n  console.log(matrix1);\n\n  for (let i = 1; i < n; i++) {\n    for (let j = i; j < n; j++) {\n      let divide = matrix1[i - 1][i - 1];\n      let multi = matrix1[j][i - 1];\n\n      for (let k = i - 1; k < n + 1; k++) {\n        matrix1[j][k] = matrix1[j][k] - matrix1[i - 1][k] / divide * multi;\n      }\n    }\n  }\n\n  for (let i = n - 1; i >= 0; i--) {\n    let sum = 0;\n\n    for (let j = 0; j < n; j++) {\n      sum = sum + matrix1[i][j] * X[j];\n    }\n\n    sum = sum - matrix1[i][i];\n    X[i] = (matrix1[i][n] - sum) / matrix1[i][i];\n  }\n  /* X.map((x,i) => arr.push({key : i , x : 'X'+(i+1) , valuex : x.toFixed(5)})) */\n\n\n  X.map((x, i) => arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['X' + (i + 1) + ' = ', \" \", x.toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 29\n  }, this)));\n  return arr;\n}\n_c = Gauss_Elimination_cal;\nexport function Gauss_Jordan_cal(n, initialMatrix1, initialMatrix2) {\n  let matrix1 = initialMatrix1;\n  let matrix2 = initialMatrix2;\n  let arr = [];\n  let X = [];\n\n  for (let i = 0; i < n; i++) {\n    matrix1[i].push(matrix2[i]);\n    X.push(1);\n  }\n\n  console.log(matrix1);\n\n  for (let i = 1; i < n; i++) {\n    for (let j = i; j < n; j++) {\n      let divide = matrix1[i - 1][i - 1];\n      let multi = matrix1[j][i - 1];\n\n      for (let k = i - 1; k < n + 1; k++) {\n        matrix1[j][k] = matrix1[j][k] - matrix1[i - 1][k] / divide * multi;\n      }\n    }\n  }\n\n  for (let i = n - 2; i >= 0; i--) {\n    for (let j = i; j >= 0; j--) {\n      let divide = matrix1[i + 1][i + 1];\n      let multi = matrix1[j][i + 1];\n\n      for (let k = n; k >= i; k--) {\n        matrix1[j][k] = matrix1[j][k] - matrix1[i + 1][k] / divide * multi;\n      }\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    X[i] = matrix1[i][n] / matrix1[i][i];\n  }\n  /* X.map((x,i) => arr.push({key : i , x : 'X'+(i+1) , valuex : x.toFixed(5)})) */\n\n\n  X.map((x, i) => arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['X' + (i + 1) + ' = ', \" \", x.toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 29\n  }, this)));\n  return arr;\n}\n_c2 = Gauss_Jordan_cal;\nexport function LU_Decomposition_cal(n, initialMatrix1, initialMatrix2) {\n  let A = initialMatrix1;\n  let B = initialMatrix2;\n  let arr = [];\n  let U = [];\n  let L = [];\n  let Y = [];\n  let X = [];\n\n  for (let i = 0; i < n; i++) {\n    U.push([]);\n    L.push([]);\n    Y.push(1);\n    X.push(1);\n\n    for (let j = 0; j < n; j++) {\n      L[i][j] = 0;\n\n      if (i == j) {\n        U[i][j] = 1;\n      } else {\n        U[i][j] = 0;\n      }\n    }\n  } //  console.log(L.toString())\n  //  console.log(U.toString())\n  //  console.log(Y.toString())\n  //  console.log(X.toString())\n\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      let sum = 0;\n\n      for (let k = 0; k < n; k++) {\n        if (k != j || i < j) {\n          sum += L[i][k] * U[k][j];\n        }\n      }\n\n      if (i >= j) {\n        sum = A[i][j] - sum;\n        L[i][j] = sum;\n      } else {\n        sum = A[i][j] - sum;\n        U[i][j] = sum / L[i][i];\n      }\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    let sum = 0;\n\n    for (let j = 0; j < n; j++) {\n      sum += L[i][j] * Y[j];\n    }\n\n    sum = sum - L[i][i] * Y[i];\n    Y[i] = (B[i] - sum) / L[i][i];\n  }\n\n  for (let i = n - 1; i >= 0; i--) {\n    let sum = 0;\n\n    for (let j = 0; j < n; j++) {\n      sum += U[i][j] * X[j];\n    }\n\n    sum = sum - U[i][i] * X[i];\n    X[i] = (Y[i] - sum) / U[i][i];\n  }\n  /* X.map((x, i) => arr.push({ key: i, x: 'X' + (i + 1), valuex: x.toFixed(5) })) */\n\n\n  X.map((x, i) => arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['X' + (i + 1) + ' = ', \" \", x.toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 568,\n    columnNumber: 29\n  }, this)));\n  return arr;\n}\n_c3 = LU_Decomposition_cal;\nexport function jacobi_cal(n, initialMatrix1, initialMatrix2, initialError) {\n  let check = true;\n  let matrix1 = initialMatrix1;\n  let matrix2 = initialMatrix2;\n  let error = initialError;\n  let arr = [];\n  let resultX = [];\n  let ansX = [];\n  let arr_Error = [];\n\n  for (let i = 0; i < n; i++) {\n    resultX.push(0);\n  }\n\n  while (check) {\n    for (let i = 0; i < n; i++) {\n      let sum = matrix2[i];\n\n      for (let j = 0; j < n; j++) {\n        if (i != j) {\n          sum = sum - matrix1[i][j] * resultX[j];\n        }\n      }\n\n      ansX[i] = sum / matrix1[i][i];\n      arr_Error[i] = math.abs((ansX[i] - resultX[i]) / ansX[i]);\n      console.log(arr_Error[i]);\n    }\n\n    resultX = [...ansX];\n    check = false;\n\n    for (let i = 0; i < n; i++) {\n      if (arr_Error[i] > error) {\n        check = true;\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    /* arr.push({key : i , x : 'X'+(i+1) , valuex : resultX[i].toFixed(5)}) */\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ['X' + (i + 1) + ' = ', \" \", resultX[i].toFixed(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 18\n    }, this));\n  }\n\n  return arr;\n}\nexport function gauss_seidel_cal(n, initialMatrix1, initialMatrix2, initialError) {\n  let check = true;\n  let matrix1 = initialMatrix1;\n  let matrix2 = initialMatrix2;\n  let error = initialError;\n  let arr = [];\n  let resultX = [];\n  let ansX = [];\n  let arr_Error = [];\n\n  for (let i = 0; i < n; i++) {\n    resultX.push(0);\n  }\n\n  while (check) {\n    for (let i = 0; i < n; i++) {\n      let sum = matrix2[i];\n\n      for (let j = 0; j < n; j++) {\n        if (i != j) {\n          sum = sum - matrix1[i][j] * resultX[j];\n        }\n      }\n\n      ansX[i] = sum / matrix1[i][i];\n      arr_Error[i] = math.abs((ansX[i] - resultX[i]) / ansX[i]);\n      resultX[i] = ansX[i];\n      console.log(arr_Error[i]);\n    }\n\n    resultX = [...ansX];\n    check = false;\n\n    for (let i = 0; i < n; i++) {\n      if (arr_Error[i] > error) {\n        check = true;\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    /* arr.push({key : i , x : 'X'+(i+1) , valuex : resultX[i].toFixed(5)}) */\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ['X' + (i + 1) + ' = ', \" \", resultX[i].toFixed(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 18\n    }, this));\n  }\n\n  return arr;\n}\nexport function conjugate_cal(n, initialMatrix1, initialMatrix2, initialError) {\n  let A = initialMatrix1;\n  let B = initialMatrix2;\n  let error = initialError;\n  let arr = [];\n  let X = [];\n  let K = 0;\n  let checkError = 9999;\n\n  for (let i = 0; i < n; i++) {\n    X.push(0);\n  }\n\n  let R = math.multiply(A, X);\n  R = math.subtract(R, B);\n  let D = math.multiply(R, -1);\n  let lambda = null;\n  let alpha = null;\n\n  while (checkError > error) {\n    lambda = math.transpose(D);\n    let temp = lambda;\n    lambda = math.multiply(lambda, R);\n    temp = math.multiply(temp, A);\n    temp = math.multiply(temp, D);\n    lambda = lambda / temp;\n    lambda = math.multiply(lambda, -1);\n    temp = math.multiply(lambda, D);\n    X = math.add(X, temp);\n    temp = math.multiply(A, X);\n    R = math.subtract(temp, B);\n    temp = math.transpose(R);\n    temp = math.multiply(temp, R);\n    checkError = math.sqrt(temp);\n    alpha = math.transpose(R);\n    alpha = math.multiply(alpha, A);\n    alpha = math.multiply(alpha, D);\n    temp = math.transpose(D);\n    temp = math.multiply(temp, A);\n    temp = math.multiply(temp, D);\n    alpha = alpha / temp;\n    temp = math.multiply(alpha, D);\n    D = math.multiply(R, -1);\n    D = math.add(D, temp);\n    K++;\n\n    for (let i = 0; i < n; i++) {\n      /* arr.push({key : i , x : 'X'+(i+1) , valuex : X[i].toFixed(5)}) */\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ['X' + (i + 1) + ' = ', \" \", X[i].toFixed(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 18\n      }, this));\n    }\n\n    return arr;\n  }\n}\nexport function newton_interpolation_cal(initialMatrix1, initialPoint, initialX) {\n  let A = initialMatrix1;\n  let P = initialPoint;\n  let X = initialX;\n  let arr = [];\n  let ans = [];\n\n  for (let i = 0; i < P.length; i++) {\n    arr.push(A[parseInt(P[i]) - 1]);\n  }\n\n  console.log(arr.toString());\n  let findX = interpolationQuadratic_Poly_linear(arr);\n  /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : findX(X) }) */\n\n  ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['f( ' + X + ' ) = ', \" \", findX(X)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 837,\n    columnNumber: 14\n  }, this));\n  return ans;\n}\nexport function lagrange_cal(initialMatrix1, initialPoint, initialX) {\n  let A = initialMatrix1;\n  let P = initialPoint;\n  let X = initialX;\n  let arr = [];\n  let ans = [];\n\n  for (let i = 0; i < P.length; i++) {\n    arr.push(A[parseInt(P[i]) - 1]);\n  }\n\n  console.log(arr); //-----------------------------------------------------------//\n\n  let xs = [];\n  let ys = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length; j++) {\n      if (j == 0) {\n        xs.push(arr[i][j]);\n      } else if (j == 1) {\n        ys.push(arr[i][j]);\n      }\n    }\n  }\n\n  console.log(xs.length);\n  console.log(ys.length); //--------------------------------------------------------//\n\n  let ws = [];\n  let k = xs.length;\n  let w;\n\n  for (let j = 0; j < k; ++j) {\n    w = 1;\n\n    for (var i = 0; i < k; ++i) {\n      if (i != j) {\n        w *= xs[j] - xs[i];\n      }\n    }\n\n    ws[j] = 1 / w;\n  } //-----------------------------------------------------------//\n\n\n  let a = 0;\n  let b = 0;\n  let c = 0;\n\n  for (let j = 0; j < xs.length; ++j) {\n    if (X != xs[j]) {\n      a = ws[j] / (X - xs[j]);\n      b += a * ys[j];\n      c += a;\n    } else {\n      /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : ys[j] }) */\n      ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ['f( ' + X + ' ) = ', \" \", ys[j]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 22\n      }, this));\n      return ans;\n    }\n  }\n  /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : (b/c).toFixed(5) }) */\n\n\n  ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['f( ' + X + ' ) = ', \" \", (b / c).toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 918,\n    columnNumber: 11\n  }, this));\n  return ans;\n}\nexport function spline_cal(initialMatrix1, initialX) {\n  let arr = initialMatrix1;\n  let X = initialX;\n  let ans = []; //-----------------------------------------------------------//\n\n  let xs = [];\n  let ys = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length; j++) {\n      if (j == 0) {\n        xs.push(arr[i][j]);\n      } else if (j == 1) {\n        ys.push(arr[i][j]);\n      }\n    }\n  }\n\n  const spline = new Spline(xs, ys);\n  /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : spline.at(X) }) */\n\n  ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['f( ' + X + ' ) = ', \" \", spline.at(X)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 963,\n    columnNumber: 14\n  }, this));\n  return ans;\n}\nexport function linear_cal(initialMatrix1, initialX, n) {\n  let arr = initialMatrix1;\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < 2; j++) {\n      arr[i][j] = parseInt(arr[i][j]);\n    }\n  }\n  /*     let arr =  [\n          [10, 5],\n          [15, 9],\n          [20, 15],\n          [30, 18], \n          [40, 22],\n          [50, 30], \n          [60, 35],\n          [70, 38], \n          [80, 43]\n      ]\n   */\n\n\n  const result = regression.linear(arr);\n  let X = initialX;\n  const gradient = parseFloat(result.equation[0]);\n  const yIntercept = parseFloat(result.equation[1]);\n  console.log(arr);\n  console.log(X);\n  console.log(gradient);\n  console.log(yIntercept);\n  console.log((yIntercept + gradient * X).toFixed(5));\n  let ans = [];\n  /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : (yIntercept + (gradient*X)).toFixed(5) }) */\n\n  ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['f( ' + X + ' ) = ', \" \", (yIntercept + gradient * X).toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1006,\n    columnNumber: 11\n  }, this));\n  return ans;\n}\nexport function poly_cal(initialMatrix1, initialX, n) {\n  let arr = initialMatrix1;\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < 2; j++) {\n      arr[i][j] = parseInt(arr[i][j]);\n    }\n  }\n\n  const result = regression.polynomial(arr);\n  let X = initialX;\n  const a0 = parseFloat(result.equation[0]);\n  const a1 = parseFloat(result.equation[1]);\n  const a2 = parseFloat(result.equation[2]);\n  console.log(a0);\n  console.log(a1);\n  console.log(a2);\n  let ans = [];\n  let fx = a0 + a1 * X + a2 * (X * X);\n  console.log(fx);\n  /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : fx.toFixed(5) }) */\n\n  ans.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['f( ' + X + ' ) = ', \" \", fx.toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1035,\n    columnNumber: 14\n  }, this));\n  return ans;\n}\nexport function multiple_cal(initialN, initialMatrix1, initialX1, initialX2, initialX3) {\n  let n = initialN;\n  let X1 = initialX1;\n  let X2 = initialX2;\n  let X3 = initialX3; // let A = [[1,0,1,4],[0,1,3,-5],[2,4,1,-6],[3,2,2,0],[4,1,5,-1],[2,3,3,-7],[1,6,4,-20]]\n\n  let A = initialMatrix1;\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < 4; j++) {\n      A[i][j] = parseInt(A[i][j]);\n    }\n  }\n\n  let x1 = [];\n  let x2 = [];\n  let x3 = [];\n  let y = [];\n  let sumx1 = 0;\n  let sumx2 = 0;\n  let sumx3 = 0;\n  let sumy = 0;\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (j == 0) {\n        x1.push(A[i][j]);\n        sumx1 += A[i][j];\n      } else if (j == 1) {\n        x2.push(A[i][j]);\n        sumx2 += A[i][j];\n      } else if (j == 2) {\n        x3.push(A[i][j]);\n        sumx3 += A[i][j];\n      } else if (j == 3) {\n        y.push(A[i][j]);\n        sumy += A[i][j];\n      }\n    }\n  }\n\n  console.log(x1.toString());\n  console.log(x2.toString());\n  console.log(x3.toString());\n  console.log(y.toString());\n  console.log(sumx1);\n  console.log(sumx2);\n  console.log(sumx3);\n  console.log(sumy);\n\n  function cal(matrix1, matrix2) {\n    let summ = 0;\n\n    for (let i = 0; i < n; i++) {\n      summ += matrix1[i] * matrix2[i];\n    }\n\n    return summ;\n  }\n\n  let Xx = [];\n  Xx.push(x1);\n  Xx.push(x2);\n  Xx.push(x3);\n  Xx.push(y);\n  let arrSum = [];\n  arrSum.push(sumx1);\n  arrSum.push(sumx2);\n  arrSum.push(sumx3);\n  arrSum.push(sumy); // console.log(arrSum)\n  // console.log(cal(Xx[0],Xx[2]))\n  // console.log(Xx)\n  //   console.log(cal(x1,x1))\n  //  console.log(cal(x1,x2))\n  //  console.log(cal(x1,x3))\n  //  console.log(cal(x2,x3))\n  //  console.log(cal(x1,y))  \n  //  console.log(cal(x2,y))\n  //  console.log(cal(x3,y))\n\n  let B = [];\n\n  for (let i = 0; i < 4; i++) {\n    B.push([]);\n\n    for (let j = 0; j < 4 + 1; j++) {\n      if (i == 0 && j == 0) {\n        B[i][j] = 7;\n      } else if (i == 0) {\n        B[i][j] = arrSum[j - 1];\n      } else if (j == 0) {\n        B[i][j] = arrSum[i - 1];\n      } else {\n        B[i][j] = cal(Xx[i - 1], Xx[j - 1]);\n      }\n    }\n  }\n\n  console.log(B);\n  let matrix1 = B;\n  let arr = [];\n  let X = [];\n\n  for (let i = 0; i < 4; i++) {\n    X.push(1);\n  }\n\n  console.log(matrix1);\n\n  for (let i = 1; i < 4; i++) {\n    for (let j = i; j < 4; j++) {\n      let divide = matrix1[i - 1][i - 1];\n      let multi = matrix1[j][i - 1];\n\n      for (let k = i - 1; k < 4 + 1; k++) {\n        matrix1[j][k] = matrix1[j][k] - matrix1[i - 1][k] / divide * multi;\n      }\n    }\n  }\n\n  for (let i = 4 - 1; i >= 0; i--) {\n    let sum = 0;\n\n    for (let j = 0; j < 4; j++) {\n      sum = sum + matrix1[i][j] * X[j];\n    }\n\n    sum = sum - matrix1[i][i];\n    X[i] = (matrix1[i][4] - sum) / matrix1[i][i];\n  }\n\n  console.log(X[0]);\n  console.log(X[1]);\n  console.log(X[2]);\n  console.log(X[3]);\n  let fX = X[0] + X[1] * X1 + X[2] * X2 + X[3] * X3;\n  /* arr.push({key :  1 ,fx : 'Y' , valuex : fX.toFixed(5) }) */\n\n  arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['Y = ', \" \", fX.toFixed(5)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1217,\n    columnNumber: 14\n  }, this));\n  return arr;\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Gauss_Elimination_cal\");\n$RefreshReg$(_c2, \"Gauss_Jordan_cal\");\n$RefreshReg$(_c3, \"LU_Decomposition_cal\");","map":{"version":3,"sources":["C:/Users/outuy/Desktop/Web_Numer-main/src/Compute.js"],"names":["React","math","require","regression","interpolationQuadratic_Poly_linear","Spline","checkX","equation","replaceAll","copyArray","n","matrix1","arr","i","push","concat","bisectioncal","init_fx","init_xl","init_xr","init_error","fx","parse","compile","xl","bignumber","xr","error","xm","divide","add","checkValue","multiply","evaluate","x","checkError","Number","MAX_VALUE","newXm","data","iteration","larger","abs","subtract","toFixed","toString","falsepositioncal","oldX1","fXL","fXR","x1","fx1","check","onepointcal","init_x","X","oldX","oldcheckError","console","log","newton_raphsoncal","fXprime","derivative","fXdiff","fX","secantcal","init_x0","init_x1","x0","fx0","Math","cramercal","initialMatrix1","initialMatrix2","matrix2","det_matrixA","det","temp_matrix1","j","Gauss_Elimination_cal","multi","k","sum","map","Gauss_Jordan_cal","LU_Decomposition_cal","A","B","U","L","Y","jacobi_cal","initialError","resultX","ansX","arr_Error","gauss_seidel_cal","conjugate_cal","K","R","D","lambda","alpha","transpose","temp","sqrt","newton_interpolation_cal","initialPoint","initialX","P","ans","length","parseInt","findX","lagrange_cal","xs","ys","ws","w","a","b","c","spline_cal","spline","at","linear_cal","result","linear","gradient","parseFloat","yIntercept","poly_cal","polynomial","a0","a1","a2","multiple_cal","initialN","initialX1","initialX2","initialX3","X1","X2","X3","x2","x3","y","sumx1","sumx2","sumx3","sumy","cal","summ","Xx","arrSum"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css'\n\nconst math = require(\"mathjs\");\nvar regression = require('regression')\nvar interpolationQuadratic_Poly_linear = require('interpolating-polynomial')\nconst Spline = require('cubic-spline');\n\nfunction checkX(equation){\n    equation = equation.replaceAll('X' , 'x')\n    return equation\n}\n\nexport function copyArray(n,matrix1){\n    let arr = []\n     for(let i = 0;i < n ; i++){\n         arr.push([])\n         arr[i] = [].concat(matrix1[i])\n     }\n     return arr;\n \n }\n\nexport function bisectioncal( init_fx,init_xl, init_xr, init_error) {\n\n    let fx = checkX(init_fx)\n        fx = math.parse(fx).compile()\n    let xl = math.bignumber(init_xl)\n    let xr = math.bignumber(init_xr)\n    let error = math.bignumber(init_error)\n    let xm = math.divide(math.add(xl, xr), 2)\n    let checkValue = math.multiply(fx.evaluate({ x: xm }), fx.evaluate({ x: xr }))\n    let checkError = math.bignumber(Number.MAX_VALUE)\n    let newXm = 0\n    let data = []\n    let iteration = 1\n\n    if (checkValue > 0) {\n        xr = xm\n    }\n    else if (checkValue < 0) {\n        xl = xm\n    }\n\n    data.push(\n        <div className=\"set_center_by_app\"> \n            <div className=\"set_head_result\">{\"Iteration\"}</div>\n            <div className=\"set_head_result\">{\"Xm\"}</div>\n            <div className=\"set_head_result\">{\"Error\"}</div>\n        </div>\n        )\n    while (math.larger(checkError, error)) {\n        newXm = math.divide(math.add(xl, xr), 2)\n        checkValue = math.multiply(fx.evaluate({ x: newXm }), fx.evaluate({ x: xr }))\n        if (checkValue > 0) {\n            xr = newXm\n        }\n        else if (checkValue < 0) {\n            xl = newXm\n        }\n        checkError = math.abs(math.divide(math.subtract(newXm, xm), newXm))\n        xm = newXm\n        data.push(\n            <div className=\"set_center_by_app\">\n                <div className=\"set_result_by_app\">{iteration}</div>\n                <div className=\"set_result_by_app\">{xm.toFixed(15).toString()}</div>\n                <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n            </div>\n            )\n        iteration = iteration + 1\n    }\n    return data\n}\n\nexport function falsepositioncal(init_fx,init_xl, init_xr, init_error){\n    \n    let equation = checkX(init_fx)\n        equation = math.parse(equation).compile()\n\n    let xl = math.bignumber(init_xl)\n    let xr = math.bignumber(init_xr)\n    let error = math.bignumber(init_error)\n    \n    let arr = []\n\n    let i = 1;\n    \n    \n    let oldX1 = 0;\n\n    let checkError = 9999\n\n    arr.push(\n        <div className=\"set_center_by_app\"> \n            <div className=\"set_head_result\">{\"Iteration\"}</div>\n            <div className=\"set_head_result\">{\"X1\"}</div>\n            <div className=\"set_head_result\">{\"Error\"}</div>\n        </div>\n        )\n\n    while(checkError > error){\n\n       let fXL  = equation.evaluate({x : xl})\n\n       let fXR  = equation.evaluate({x : xr})\n       \n       let x1 = math.divide(math.subtract(math.multiply(xl , fXR) , math.multiply(xr , fXL)) , math.subtract(fXR , fXL))\n\n       \n       let fx1 = equation.evaluate({x : x1})\n\n       let check = math.multiply(fx1,fXR)\n      \n       if( check >= 0){\n           xr = x1\n       }\n       else{\n           xl =x1\n       }\n\n       checkError =  math.abs((x1 - oldX1)/x1);\n\n       oldX1 = x1\n\n       arr.push(\n        <div className=\"set_center_by_app\">\n            <div className=\"set_result_by_app\">{i}</div>\n            <div className=\"set_result_by_app\">{x1.toFixed(15).toString()}</div>\n            <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n        </div>\n        )\n       i++\n       \n    }\n    return arr\n}\n\nexport function onepointcal(init_fx , init_x , init_error) {\n\n    let equation = checkX(init_fx)\n        equation = math.parse(equation).compile()\n     \n     let X = math.bignumber(init_x)\n     \n     let error = math.bignumber(init_error)\n     \n     let arr = []\n\n     let i = 1;\n     \n     \n     let oldX = 0;\n\n     let checkError = 9999\n     let oldcheckError = 9999;\n\n     arr.push(\n        <div className=\"set_center_by_app\"> \n            <div className=\"set_head_result\">{\"Iteration\"}</div>\n            <div className=\"set_head_result\">{\"X\"}</div>\n            <div className=\"set_head_result\">{\"Error\"}</div>\n        </div>\n        )\n\n     while(checkError > error){\n\n        \n         X  = equation.evaluate({x : X})\n\n         checkError =  math.abs((X - oldX)/X);\n         console.log(checkError);\n         console.log(oldcheckError);\n         if(checkError > oldcheckError){\n            arr.push(\n                <div className=\"set_center_by_app\">\n                    <div className=\"set_result_by_app\">{i}</div>\n                    <div className=\"set_result_by_app\">{\"ลู่ออก\"}</div>\n                    <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n                </div>\n                )\n            break;\n        }\n          oldcheckError = checkError;\n        \n         oldX = X\n        \n        arr.push(\n            <div className=\"set_center_by_app\">\n                <div className=\"set_result_by_app\">{i}</div>\n                <div className=\"set_result_by_app\">{X.toFixed(15).toString()}</div>\n                <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n            </div>\n            )\n        i++\n        \n     }\n     return arr\n}\n\nexport function newton_raphsoncal(init_fx , init_x , init_error) {\n\n    let equation = checkX(init_fx)\n        equation = math.parse(equation)\n    \n    let X = math.bignumber(init_x)\n\n    let fXprime = math.derivative(equation,'x').compile()\n    \n    let error = math.bignumber(init_error)\n\n    \n\n    let arr = []\n\n    let i = 1;\n\n\n    let oldX = X;\n\n    let checkError = 9999\n    let oldcheckError = 9999;\n\n    arr.push(\n        <div className=\"set_center_by_app\"> \n            <div className=\"set_head_result\">{\"Iteration\"}</div>\n            <div className=\"set_head_result\">{\"X\"}</div>\n            <div className=\"set_head_result\">{\"Error\"}</div>\n        </div>\n        )\n    \n    while (checkError > error) {\n\n        let fXdiff = fXprime.evaluate({x : X})\n        let fX = equation.evaluate({ x: X })\n        X = math.subtract(X, math.divide(fX, fXdiff))\n\n\n\n        checkError = math.abs((X - oldX) / X);\n        if (checkError > oldcheckError) {\n            arr.push(\n                <div className=\"set_center_by_app\">\n                    <div className=\"set_result_by_app\">{i}</div>\n                    <div className=\"set_result_by_app\">{\"ลู่ออก\"}</div>\n                    <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n                </div>\n                )\n            break;\n        }\n        oldcheckError = checkError;\n\n        oldX = X\n\n        arr.push(\n            <div className=\"set_center_by_app\">\n                <div className=\"set_result_by_app\">{i}</div>\n                <div className=\"set_result_by_app\">{X.toFixed(15).toString()}</div>\n                <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n            </div>\n            )\n        i++\n\n    }\n    return arr\n}\n\nexport function secantcal(init_fx , init_x0 , init_x1 , init_error) {\n\n    let equation = checkX(init_fx)\n        equation = math.parse(equation).compile()\n    let x0 = math.bignumber(init_x0)\n    let x1 = math.bignumber(init_x1)\n\n\n    let fx0 = equation.evaluate({x:x0})\n    let fx1 = equation.evaluate({x:x1})\n\n    let error = math.bignumber(init_error)\n\n    \n\n    let arr = []\n\n    let i = 1;\n\n\n    let oldX = 0;\n\n    let checkError = 9999\n    let oldcheckError = 9999;\n\n    arr.push(\n        <div className=\"set_center_by_app\"> \n            <div className=\"set_head_result\">{\"Iteration\"}</div>\n            <div className=\"set_head_result\">{\"X\"}</div>\n            <div className=\"set_head_result\">{\"Error\"}</div>\n        </div>\n        )\n       \n    while (checkError > error) {\n\n    let    x = math.subtract(x1 , math.divide(math.multiply(fx1,math.subtract(x0 , x1) ), math.subtract(fx0 , fx1)));\n            \n            checkError = Math.abs((x - x1)/x);\n            \n            fx0 = fx1;\n            x0 = x1;\n            x1 = x;\n            fx1 = equation.evaluate({x : x1})\n\n\n       \n        if (checkError > oldcheckError) {\n            arr.push(\n                <div className=\"set_center_by_app\">\n                    <div className=\"set_result_by_app\">{i}</div>\n                    <div className=\"set_result_by_app\">{\"ลู่ออก\"}</div>\n                    <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n                </div>\n                )\n            break;\n        }\n        oldcheckError = checkError;\n\n        oldX = x\n\n        arr.push(\n            <div className=\"set_center_by_app\">\n                <div className=\"set_result_by_app\">{i}</div>\n                <div className=\"set_result_by_app\">{x.toFixed(15).toString()}</div>\n                <div className=\"set_result_by_app\">{checkError.toFixed(15).toString()}</div>\n            </div>\n            )\n        i++\n\n    }\n    return arr\n}\n\nexport function cramercal(n, initialMatrix1, initialMatrix2) {\n\n    let matrix1=math.bignumber(initialMatrix1)\n    let matrix2=math.bignumber(initialMatrix2)\n    let det_matrixA = math.det(matrix1)\n    \n    let temp_matrix1 = copyArray(n,matrix1)\n\n    let arr = []\n\n    let X = [];\n    \n    \n\n\n        for (let i = 0; i < n; i++) { \n\n            for (let j = 0; j < n; j++) { \n                temp_matrix1[j][i] = matrix2[j]  \n            }\n            X[i] = math.divide(math.det(temp_matrix1) , det_matrixA).toFixed(15).toString()\n            \n            /* arr.push({key : i , x : 'X'+(i+1) ,valuex : X[i]}) */\n            arr.push(<div>{'X' + (i+1) + ' = '} {X[i]}</div>)\n            \n            temp_matrix1 = copyArray(n,matrix1);\n        }\n        \n    return arr\n}\n\nexport function Gauss_Elimination_cal(n, initialMatrix1, initialMatrix2) {\n\n    let matrix1=initialMatrix1\n    let matrix2=initialMatrix2\n    \n    \n    \n    let arr = []\n    let X = []\n    \n    for(let i = 0 ; i < n ; i++){\n        matrix1[i].push(matrix2[i]) \n        X.push(1)\n    }\n    console.log(matrix1)\n   \n    for(let i = 1;i < n ; i++){\n        for(let j = i ;j < n ; j++){\n\n            let divide = matrix1[i-1][i-1]\n            let multi = matrix1[j][i-1]\n\n            for(let k = i-1 ; k < n+1;k++){\n                matrix1[j][k] = matrix1[j][k] - ((matrix1[i-1][k]/divide)*multi)\n                \n            }\n    \n        }\n         \n    }\n\n    for(let i = n-1 ;i >= 0 ; i--){\n        let sum = 0;\n        for(let j = 0 ; j < n ;j++){\n            sum = sum + matrix1[i][j]*X[j];\n        }\n        sum = sum - matrix1[i][i]\n        X[i] = ((matrix1[i][n] - sum)/matrix1[i][i])\n        \n    }\n    /* X.map((x,i) => arr.push({key : i , x : 'X'+(i+1) , valuex : x.toFixed(5)})) */\n    X.map((x,i) => arr.push(<div>{'X' + (i+1) + ' = '} {x.toFixed(5)}</div>))\n\n        \n    return arr\n}\n\nexport function Gauss_Jordan_cal(n, initialMatrix1, initialMatrix2) {\n\n    let matrix1=initialMatrix1\n    let matrix2=initialMatrix2\n    \n    \n    \n    let arr = []\n    let X = []\n    \n    for(let i = 0 ; i < n ; i++){\n        matrix1[i].push(matrix2[i]) \n        X.push(1)\n    }\n    console.log(matrix1)\n   \n    for(let i = 1;i < n ; i++){\n        for(let j = i ;j < n ; j++){\n\n            let divide = matrix1[i-1][i-1]\n            let multi = matrix1[j][i-1]\n\n            for(let k = i-1 ; k < n+1;k++){\n                matrix1[j][k] = matrix1[j][k] - ((matrix1[i-1][k]/divide)*multi)\n              \n            }\n    \n        }\n         \n    }\n    for(let i = n-2;i >= 0 ; i--){\n        for(let j = i ;j >= 0 ; j--){\n\n            let divide = matrix1[i+1][i+1]\n            let multi = matrix1[j][i+1]\n\n            for(let k = n ; k >= i;k--){\n                matrix1[j][k] = matrix1[j][k] - ((matrix1[i+1][k]/divide)*multi)\n              \n            }\n    \n        }\n         \n    }\n\n    for(let i = 0 ;i < n ; i++){\n        X[i] = ((matrix1[i][n] )/matrix1[i][i])\n    }\n       \n      \n        \n    \n    /* X.map((x,i) => arr.push({key : i , x : 'X'+(i+1) , valuex : x.toFixed(5)})) */\n    X.map((x,i) => arr.push(<div>{'X' + (i+1) + ' = '} {x.toFixed(5)}</div>))\n        \n    return arr\n}\n\nexport function LU_Decomposition_cal(n, initialMatrix1, initialMatrix2) {\n\n    let A = initialMatrix1\n    let B = initialMatrix2\n\n   \n   \n    let arr = []\n    let U = []\n    let L = []\n    let Y = []\n    let X = []\n    \n    for (let i = 0; i < n; i++) {\n            U.push([])\n            L.push([])\n            Y.push(1)\n            X.push(1)\n        for (let j = 0; j < n; j++) {\n            L[i][j]=0\n            if(i == j){\n                U[i][j]= 1\n            }\n            else{\n                \n                U[i][j]=0\n            }\n               \n               \n           \n           \n            \n\n        }\n    }\n    //  console.log(L.toString())\n    //  console.log(U.toString())\n    //  console.log(Y.toString())\n    //  console.log(X.toString())\n    \n    for (let i = 0; i < n; i++) {\n\n        for (let j = 0; j < n; j++) {\n\n            let sum = 0\n\n            for (let k = 0; k < n; k++) {\n\n\n                if (k != j || i < j) {\n                    sum += L[i][k] * U[k][j]\n                }\n\n\n            }\n            if (i >= j) {\n                sum = A[i][j] - sum;\n                L[i][j] = sum;\n            }\n            else {\n                sum = A[i][j] - sum;\n                U[i][j] = sum / L[i][i];\n            }\n        }\n    }\n   \n    \n    for (let i = 0; i < n; i++) {\n        let sum = 0;\n        for (let j = 0; j < n; j++) {\n\n            sum += L[i][j] * Y[j];\n        }\n        sum = sum - L[i][i] * Y[i];\n\n        Y[i] = ((B[i] - sum) / L[i][i])\n        \n    }\n    for (let i = n-1; i >= 0; i--) {\n        let sum = 0;\n        for (let j = 0; j < n; j++) {\n\n            sum += U[i][j] * X[j];\n        }\n        sum = sum - U[i][i] * X[i];\n\n        X[i] = ((Y[i] - sum) / U[i][i])\n\n    }\n    \n  \n    /* X.map((x, i) => arr.push({ key: i, x: 'X' + (i + 1), valuex: x.toFixed(5) })) */\n    X.map((x,i) => arr.push(<div>{'X' + (i+1) + ' = '} {x.toFixed(5)}</div>))\n\n\n\n\n\n\n\n\n    return arr\n}\n\nexport function jacobi_cal(n, initialMatrix1, initialMatrix2,initialError) {\n\n    let check = true;\n    let matrix1=initialMatrix1\n    let matrix2=initialMatrix2\n    \n    let error = initialError\n\n  \n    \n    let arr = []\n    \n    let resultX = []\n    let ansX = []\n    \n    let arr_Error = []\n    for(let i = 0 ; i < n ;i++){\n        resultX.push(0)\n        \n    }\n    \n    while(check){\n\n       \n        \n        \n        for(let i = 0;i <  n ;i++){\n            let sum = matrix2[i]\n            for(let j = 0;j < n;j++){\n                if(i != j){\n                    \n                   \n                    sum = (sum- (matrix1[i][j]*resultX[j]))\n                    \n                    \n                    \n                }\n                \n            }\n            \n            \n            ansX[i] = sum/matrix1[i][i];\n            \n            \n          \n            arr_Error[i] = math.abs((ansX[i]-resultX[i])/ansX[i])\n            \n            console.log(arr_Error[i])\n            \n           \n        }\n        resultX = [...ansX]\n        check = false\n        for(let i = 0 ; i < n ; i++){\n            if(arr_Error[i] > error){\n               check = true\n               break;\n            }\n          \n            \n        }\n       \n    \n    }\n    for(let i = 0 ; i < n ; i++){\n        /* arr.push({key : i , x : 'X'+(i+1) , valuex : resultX[i].toFixed(5)}) */\n        arr.push(<div>{'X' + (i+1) + ' = '} {resultX[i].toFixed(5)}</div>)\n    }\n     \n\n        \n    return arr\n}\n\nexport function gauss_seidel_cal(n, initialMatrix1, initialMatrix2,initialError) {\n\n    let check = true;\n    let matrix1=initialMatrix1\n    let matrix2=initialMatrix2\n    \n    let error = initialError\n\n  \n    \n    let arr = []\n    \n    let resultX = []\n    let ansX = []\n    \n    let arr_Error = []\n    for(let i = 0 ; i < n ;i++){\n        resultX.push(0)\n        \n    }\n    \n    while(check){\n\n       \n        \n        \n        for(let i = 0;i <  n ;i++){\n            let sum = matrix2[i]\n            for(let j = 0;j < n;j++){\n                if(i != j){\n                    \n                   \n                    sum = (sum- (matrix1[i][j]*resultX[j]))\n                    \n                    \n                    \n                }\n                \n            }\n            \n            \n            ansX[i] = sum/matrix1[i][i];\n            \n            \n          \n            arr_Error[i] = math.abs((ansX[i]-resultX[i])/ansX[i])\n            resultX[i] = ansX[i]\n            console.log(arr_Error[i])\n            \n           \n        }\n        resultX = [...ansX]\n        check = false\n        for(let i = 0 ; i < n ; i++){\n            if(arr_Error[i] > error){\n               check = true\n               break;\n            }\n          \n            \n        }\n       \n    \n    }\n    for(let i = 0 ; i < n ; i++){\n        /* arr.push({key : i , x : 'X'+(i+1) , valuex : resultX[i].toFixed(5)}) */\n        arr.push(<div>{'X' + (i+1) + ' = '} {resultX[i].toFixed(5)}</div>)\n    }\n     \n\n        \n    return arr\n}\n\nexport function conjugate_cal(n, initialMatrix1, initialMatrix2,initialError) {\n\n    \n    let A = initialMatrix1\n\n    let B = initialMatrix2\n    \n    let error = initialError\n\n  \n    \n    let arr = []\n    \n    let X = []\n    \n    let K = 0;\n    \n    let checkError = 9999\n\n    for(let i = 0 ; i < n ;i++){\n       X.push(0)\n        \n    }\n    \n    let R = math.multiply(A,X);\n    R = math.subtract(R,B);\n    let D = math.multiply(R,-1);\n    \n    let lambda = null;\n\n    let alpha = null; \n\n    while(checkError > error){\n\n        lambda = math.transpose(D);\n        let temp = lambda;\n        lambda = math.multiply(lambda, R);\n        temp = math.multiply(temp, A);\n        temp = math.multiply(temp, D);\n\n        lambda = lambda / temp;\n\n        lambda = math.multiply(lambda, -1);\n\n        temp = math.multiply(lambda, D);\n        X = math.add(X, temp);\n\n        temp = math.multiply(A, X);\n        R = math.subtract(temp, B);\n\n        temp = math.transpose(R);\n        temp = math.multiply(temp, R);\n\n        checkError = math.sqrt(temp);\n\n        alpha = math.transpose(R);\n        alpha = math.multiply(alpha, A);\n        alpha = math.multiply(alpha, D);\n\n        temp = math.transpose(D);\n        temp = math.multiply(temp, A);\n        temp = math.multiply(temp, D);\n\n        alpha = alpha / temp;\n\n        temp = math.multiply(alpha, D);\n        D = math.multiply(R, -1);\n        D = math.add(D, temp);\n\n       K++;\n         \n        \n        \n        \n      \n    for(let i = 0 ; i < n ; i++){\n        /* arr.push({key : i , x : 'X'+(i+1) , valuex : X[i].toFixed(5)}) */\n        arr.push(<div>{'X' + (i+1) + ' = '} {X[i].toFixed(5)}</div>)\n    }\n     \n\n        \n    return arr\n}\n}\n\nexport function newton_interpolation_cal( initialMatrix1, initialPoint,initialX) {\n    let A = initialMatrix1\n\n    let P = initialPoint\n   \n    let X = initialX\n\n    \n\n    let arr = []\n    let ans = []\n\n   \n   for(let i = 0 ; i < P.length ; i++){\n           arr.push(A[parseInt(P[i])-1])\n   }\n  \n   console.log(arr.toString())\n   let findX = interpolationQuadratic_Poly_linear(arr)\n\n   \n\n    /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : findX(X) }) */\n    ans.push(<div>{'f( '+X+' ) = '} {findX(X)}</div>)\n\n   return ans\n}\n\nexport function lagrange_cal(initialMatrix1,initialPoint,initialX){\n    \n\n    let A = initialMatrix1\n\n    let P = initialPoint\n   \n    let X = initialX\n\n    \n\n    let arr = []\n    let ans = []\n\n   \n   for(let i = 0 ; i < P.length ; i++){\n           arr.push(A[parseInt(P[i])-1])\n   }\n   console.log(arr)\n\n   //-----------------------------------------------------------//\n   let xs = []\n   let ys = []\n\n\tfor(let i = 0 ; i < arr.length ; i++){\n\n\t\tfor(let j = 0 ; j < arr.length ; j++){\n\t\t\t\tif(j == 0){\n\t\t\t\t\txs.push(arr[i][j])\n\t\t\t\t}\n\t\t\t\telse if(j == 1){\n\t\t\t\t\tys.push(arr[i][j])\n\t\t\t\t}\n\t\t}\n\t\t\t\n\t}\n    console.log(xs.length)\n    console.log(ys.length)\n    //--------------------------------------------------------//\n    let ws = [];\n\tlet k = xs.length;\n\tlet w;\n\t\n\tfor (let j = 0; j < k; ++j) {\n\t\tw = 1;\n\t\tfor (var i = 0; i < k; ++i) {\n\t\t\tif (i != j) {\n\t\t\t\tw *= xs[j] - xs[i];\n\t\t\t}\n\t\t}\n\t\tws[j] = 1/w;\n\t}\n //-----------------------------------------------------------//\n    let a = 0;\n\tlet b = 0;\n\tlet c = 0;\n\n\tfor (let j = 0; j < xs.length; ++j) {\n\t\t\n\t\tif (X != xs[j]) {\n\t\t\t\n\t\t\ta = ws[j] / (X - xs[j]);\n\t\t\tb += a * ys[j];\n\t\t\tc += a;\n\t\t} else {\n            /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : ys[j] }) */\n            ans.push(<div>{'f( '+X+' ) = '} {ys[j]}</div>)\n\t\t\treturn ans;\n            \n\t\t\t\n\t\t}\n\t}\n\t\n\n\n    /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : (b/c).toFixed(5) }) */\n\tans.push(<div>{'f( '+X+' ) = '} {(b/c).toFixed(5)}</div>)\n\n    return ans\n\n}\n\nexport function spline_cal(initialMatrix1,initialX){\n    \n\n    let arr = initialMatrix1\n\n   \n   \n    let X = initialX\n\n    \n\n    \n    let ans = []\n\n  \n\n   //-----------------------------------------------------------//\n   let xs = []\n   let ys = []\n\n\n\n\tfor(let i = 0 ; i < arr.length ; i++){\n\n\t\tfor(let j = 0 ; j < arr.length ; j++){\n\t\t\t\tif(j == 0){\n\t\t\t\t\txs.push(arr[i][j])\n\t\t\t\t}\n\t\t\t\telse if(j == 1){\n\t\t\t\t\tys.push(arr[i][j])\n\t\t\t\t}\n\t\t}\n\t\t\t\n\t}\n\n    const spline = new Spline(xs,ys)\n    \n\n    /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : spline.at(X) }) */\n    ans.push(<div>{'f( '+X+' ) = '} {spline.at(X)}</div>)\n\t\n\n    return ans\n\n}\n\nexport function linear_cal(initialMatrix1,initialX,n){\n\n    let arr = initialMatrix1\n\n    for(let i = 0 ; i < n ; i++){\n        for(let j = 0 ; j < 2 ; j ++){\n            arr[i][j] = parseInt(arr[i][j])\n        }\n    }\n\n  \n/*     let arr =  [\n        [10, 5],\n        [15, 9],\n        [20, 15],\n        [30, 18], \n        [40, 22],\n        [50, 30], \n        [60, 35],\n        [70, 38], \n        [80, 43]\n    ]\n */ \n   \n    const result = regression.linear(arr);\n    let X = initialX\n    const gradient = parseFloat(result.equation[0]);\n    const yIntercept = parseFloat(result.equation[1]);\n    console.log(arr)\n    console.log(X)\n    console.log(gradient)\n    console.log(yIntercept)\n\n    console.log((yIntercept + (gradient*X)).toFixed(5));\n    let ans = []\n    /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : (yIntercept + (gradient*X)).toFixed(5) }) */\n\tans.push(<div>{'f( '+X+' ) = '} {(yIntercept + (gradient*X)).toFixed(5)}</div>)\n\n    return ans\n\n}\n\nexport function poly_cal(initialMatrix1,initialX,n){\n    \n    let arr = initialMatrix1\n  \n    for(let i = 0 ; i < n ; i++){\n        for(let j = 0 ; j < 2 ; j ++){\n            arr[i][j] = parseInt(arr[i][j])\n        }\n    }\n   \n    const result = regression.polynomial(arr);\n    let X = initialX\n    const a0 = parseFloat(result.equation[0]);\n    const a1 = parseFloat(result.equation[1]);\n    const a2 = parseFloat(result.equation[2]);\n    console.log(a0)\n    console.log(a1)\n    console.log(a2)\n\n    let ans = [] \n    let fx = a0+(a1*X)+(a2*(X*X))\n    console.log(fx);\n    /* ans.push({key :  1 ,fx : 'f('+X+')' , valuex : fx.toFixed(5) }) */\n    ans.push(<div>{'f( '+X+' ) = '} {fx.toFixed(5)}</div>)\n\t\n\n    return ans\n\n}\n\nexport function multiple_cal(initialN,initialMatrix1,initialX1,initialX2,initialX3){\n    \n    let n = initialN;\n    let X1 = initialX1\n    let X2 = initialX2\n    let X3 = initialX3\n    // let A = [[1,0,1,4],[0,1,3,-5],[2,4,1,-6],[3,2,2,0],[4,1,5,-1],[2,3,3,-7],[1,6,4,-20]]\n    let A = initialMatrix1\n\n    for(let i = 0 ; i < n ; i++){\n        for(let j = 0 ; j < 4 ; j ++){\n            A[i][j] = parseInt(A[i][j])\n        }\n    }\n\n      let x1 = []\n      let x2 = []\n      let x3 = []\n      let y = []\n      let sumx1 = 0\n      let sumx2 = 0\n      let sumx3 = 0\n      let sumy  = 0\n      for(let i = 0; i < n ; i++){\n          for(let j = 0 ; j < 4 ; j++){\n              if(j == 0){\n                x1.push(A[i][j])\n                \n                 sumx1 +=  A[i][j]\n                \n              }\n              else if(j == 1){\n                x2.push(A[i][j])\n               \n                sumx2 +=  A[i][j]\n                \n              }\n              else if(j == 2){\n                x3.push(A[i][j])\n                 sumx3 +=  A[i][j]\n                \n              }\n              else if(j == 3){\n                y.push(A[i][j])\n                 sumy += A[i][j]\n               \n              }\n          }\n      }\n    \n       console.log(x1.toString())\n       console.log(x2.toString())\n       console.log(x3.toString())\n       console.log(y.toString())\n       console.log(sumx1)\n       console.log(sumx2)\n       console.log(sumx3)\n       console.log(sumy)\n      function cal(matrix1,matrix2){\n        let summ = 0\n        for(let i = 0 ; i< n ; i++){\n             summ += (matrix1[i]*matrix2[i])\n        }\n        return summ;\n      }\n    \n      let Xx = []\n      \n      Xx.push(x1)\n      Xx.push(x2)\n      Xx.push(x3)\n      Xx.push(y)\n      let arrSum = []\n      arrSum.push(sumx1)\n      arrSum.push(sumx2)\n      arrSum.push(sumx3)\n      arrSum.push(sumy)\n      // console.log(arrSum)\n    \n      // console.log(cal(Xx[0],Xx[2]))\n      // console.log(Xx)\n    //   console.log(cal(x1,x1))\n    //  console.log(cal(x1,x2))\n    //  console.log(cal(x1,x3))\n    //  console.log(cal(x2,x3))\n    //  console.log(cal(x1,y))  \n    //  console.log(cal(x2,y))\n    //  console.log(cal(x3,y))\n      \n    let B = []\n    \n    for (let i = 0; i < 4; i++) {\n      B.push([])\n      for (let j = 0; j < 4+1; j++) {\n        \n        if (i == 0 && j == 0) {\n          B[i][j] = 7\n        }\n        else if(i == 0){\n          \n           \n          \n            B[i][j] = arrSum[j-1]\n          \n         \n        }\n        else if(j == 0){\n          B[i][j] = arrSum[i-1]\n        }\n        else{\n          \n          \n            B[i][j] = cal(Xx[i-1], Xx[j-1])\n          \n         \n          \n        }\n        \n    \n    \n        }\n    \n      }\n      console.log(B)\n      \n\n      \n    let matrix1=B\n    \n    \n    \n    \n    let arr = []\n    let X = []\n    \n    for(let i = 0 ; i < 4 ; i++){\n       \n        X.push(1)\n    }\n    console.log(matrix1)\n   \n    for(let i = 1;i < 4 ; i++){\n        for(let j = i ;j < 4 ; j++){\n\n            let divide = matrix1[i-1][i-1]\n            let multi = matrix1[j][i-1]\n\n            for(let k = i-1 ; k < 4+1;k++){\n                matrix1[j][k] = matrix1[j][k] - ((matrix1[i-1][k]/divide)*multi)\n                \n            }\n    \n        }\n         \n    }\n\n    for(let i = 4-1 ;i >= 0 ; i--){\n        let sum = 0;\n        for(let j = 0 ; j < 4 ;j++){\n            sum = sum + matrix1[i][j]*X[j];\n        }\n        sum = sum - matrix1[i][i]\n        X[i] = ((matrix1[i][4] - sum)/matrix1[i][i])\n        \n    }\n    console.log(X[0])\n    console.log(X[1])\n    console.log(X[2])\n    console.log(X[3])\n\n    \n\n    let fX = X[0] + X[1]*X1+X[2]*X2+X[3]*X3\n\n    /* arr.push({key :  1 ,fx : 'Y' , valuex : fX.toFixed(5) }) */\n    arr.push(<div>{'Y = '} {fX.toFixed(5)}</div>)\n    \n    return arr\n\n\n}"]},"metadata":{},"sourceType":"module"}
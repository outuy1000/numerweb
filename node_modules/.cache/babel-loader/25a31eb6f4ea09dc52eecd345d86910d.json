{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\outuy\\\\Desktop\\\\Web_Numer-main\\\\src\\\\Root\\\\newton_raphson.js\";\nimport React from 'react';\nimport { Input } from 'antd';\nimport { Button } from 'antd';\nimport { newton_raphsoncal } from '../Compute';\nimport './root.css';\nimport apis from '../API/index';\nimport ModalExample from './modalexample';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Newton_Raphson extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Equation: '',\n      X: '',\n      ERROR: '',\n      result: '',\n      isModalVisible: false,\n      apiData: [],\n      hasData: false\n    };\n\n    this.onClickOk = e => {\n      this.setState({\n        isModalVisible: false\n      });\n    };\n\n    this.onClickInsert = e => {\n      let index = e.currentTarget.getAttribute('name').split('_');\n      index = parseInt(index[1]);\n      this.setState({\n        Equation: this.state.apiData[index][\"equation\"],\n        X: this.state.apiData[index][\"initial_x\"],\n        ERROR: this.state.apiData[index][\"error\"],\n        isModalVisible: false\n      });\n    };\n\n    this.onClickExample = e => {\n      if (!this.state.hasData) {\n        this.getData();\n      }\n\n      this.setState({\n        isModalVisible: true\n      });\n    };\n\n    this.getEquation = e => {\n      this.setState({\n        Equation: e.target.value\n      });\n    };\n\n    this.getX = e => {\n      this.setState({\n        X: e.target.value\n      });\n    };\n\n    this.getERR = e => {\n      this.setState({\n        ERROR: e.target.value\n      });\n    };\n\n    this.onClickcal = () => {\n      let equation = this.state.Equation;\n      let x = this.state.X;\n      let error = this.state.ERROR;\n      let ans = newton_raphsoncal(equation, x, error);\n      this.setState({\n        result: ans\n      });\n    };\n  }\n\n  async getData() {\n    let tempData = null;\n    await apis.getRoot().then(res => {\n      tempData = res.data;\n    });\n    this.setState({\n      apiData: tempData\n    });\n    this.setState({\n      hasData: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ModalExample, {\n        visible: this.state.isModalVisible,\n        onOk: this.onClickOk,\n        hasData: this.state.hasData,\n        apiData: this.state.apiData,\n        onClick: this.onClickInsert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set_head\",\n          children: \"Newton-Raphson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), \"Equation: \", /*#__PURE__*/_jsxDEV(Input, {\n          className: \"set_input\",\n          onChange: this.getEquation,\n          value: this.state.Equation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this), \"X: \", /*#__PURE__*/_jsxDEV(Input, {\n          className: \"set_input\",\n          onChange: this.getX,\n          value: this.state.X\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 24\n        }, this), \"Error: \", /*#__PURE__*/_jsxDEV(Input, {\n          className: \"set_input\",\n          onChange: this.getERR,\n          value: this.state.ERROR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set_center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onClickExample,\n          className: \"set\",\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.onClickcal,\n          className: \"set set_margin_left\",\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), this.state.result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Newton_Raphson;","map":{"version":3,"sources":["C:/Users/outuy/Desktop/Web_Numer-main/src/Root/newton_raphson.js"],"names":["React","Input","Button","newton_raphsoncal","apis","ModalExample","Newton_Raphson","Component","state","Equation","X","ERROR","result","isModalVisible","apiData","hasData","onClickOk","e","setState","onClickInsert","index","currentTarget","getAttribute","split","parseInt","onClickExample","getData","getEquation","target","value","getX","getERR","onClickcal","equation","x","error","ans","tempData","getRoot","then","res","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input } from 'antd';\nimport { Button } from 'antd';\nimport { newton_raphsoncal} from '../Compute';\nimport './root.css';\n\nimport apis from '../API/index'\nimport ModalExample from './modalexample'\n\nclass Newton_Raphson extends React.Component{\n    state = {\n        Equation: '',\n        X: '',\n        ERROR: '',\n        result: '',\n        isModalVisible: false,\n        apiData: [],\n        hasData: false\n    };\n\n    async getData(){\n        let tempData = null\n        await apis.getRoot().then(res => {tempData = res.data})\n        this.setState({apiData: tempData})\n        this.setState({hasData: true})\n    }\n\n    onClickOk = e =>{\n        this.setState({isModalVisible: false})\n    }\n\n    onClickInsert = e =>{\n        let index = e.currentTarget.getAttribute('name').split('_')\n            index = parseInt(index[1])\n            this.setState({\n                Equation: this.state.apiData[index][\"equation\"],\n                X: this.state.apiData[index][\"initial_x\"],\n                ERROR: this.state.apiData[index][\"error\"],\n                isModalVisible: false\n            })\n    }\n\n    onClickExample = e =>{\n        if(!this.state.hasData){\n            this.getData()\n        }\n        this.setState({isModalVisible: true})\n    }\n\n    getEquation = (e) => {\n        this.setState({Equation: e.target.value});\n    };\n\n    getX = (e) => {\n        this.setState({X: e.target.value});\n    };\n\n    getERR = (e) => {\n        this.setState({ERROR: e.target.value});\n    };\n\n    onClickcal = () => {\n        let equation = this.state.Equation;\n        let x = this.state.X;\n        let error = this.state.ERROR;\n        let ans = newton_raphsoncal(equation,x,error);\n        this.setState({result: ans});\n    };\n    \n    render(){\n        return(\n            <div>\n                <ModalExample \n                    visible = {this.state.isModalVisible}\n                    onOk = {this.onClickOk}\n                    hasData = {this.state.hasData}\n                    apiData = {this.state.apiData}\n                    onClick = {this.onClickInsert}\n                />\n                <div>\n                    <div className='set_head'>\n                        Newton-Raphson\n                    </div>\n                    Equation: <Input className=\"set_input\" onChange={this.getEquation} value={this.state.Equation} />\n                    X: <Input className=\"set_input\" onChange={this.getX} value={this.state.X} />\n                    Error: <Input className=\"set_input\" onChange={this.getERR} value={this.state.ERROR} />\n                </div>\n                <div className=\"set_center\">\n                    <Button onClick={this.onClickExample} className=\"set\">Example</Button>\n                    <Button type=\"primary\" onClick={this.onClickcal} className=\"set set_margin_left\">Calculate</Button>\n                </div>\n                {this.state.result}\n            </div>\n        );\n    }\n}\n\nexport default Newton_Raphson;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nmodule.exports = aql;\naql.displayName = 'aql';\naql.aliases = [];\n\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [{\n      pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n      lookbehind: true\n    }, /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n    {\n      pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /\\bOPTIONS(?=\\s*{)/i\n    }],\n    function: /(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /(?:true|false)/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i,\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  };\n}","map":null,"metadata":{},"sourceType":"script"}
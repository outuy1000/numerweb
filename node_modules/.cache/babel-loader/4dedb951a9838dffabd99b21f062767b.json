{"ast":null,"code":"'use strict'; // Make a value ready for JSON.stringify() / process.send()\n\nmodule.exports = function (value) {\n  if (typeof value === 'object') {\n    return destroyCircular(value, []);\n  } // People sometimes throw things besides Error objects, so...\n\n\n  if (typeof value === 'function') {\n    // JSON.stringify discards functions. We do to, unless a function is thrown directly.\n    return '[Function: ' + (value.name || 'anonymous') + ']';\n  }\n\n  return value;\n}; // https://www.npmjs.com/package/destroy-circular\n\n\nfunction destroyCircular(from, seen) {\n  var to;\n\n  if (Array.isArray(from)) {\n    to = [];\n  } else {\n    to = {};\n  }\n\n  seen.push(from);\n  Object.keys(from).forEach(function (key) {\n    var value = from[key];\n\n    if (typeof value === 'function') {\n      return;\n    }\n\n    if (!value || typeof value !== 'object') {\n      to[key] = value;\n      return;\n    }\n\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      return;\n    }\n\n    to[key] = '[Circular]';\n  });\n\n  if (typeof from.name === 'string') {\n    to.name = from.name;\n  }\n\n  if (typeof from.message === 'string') {\n    to.message = from.message;\n  }\n\n  if (typeof from.stack === 'string') {\n    to.stack = from.stack;\n  }\n\n  return to;\n}","map":null,"metadata":{},"sourceType":"script"}
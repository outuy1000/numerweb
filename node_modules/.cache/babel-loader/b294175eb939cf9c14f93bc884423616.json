{"ast":null,"code":"import React from 'react';\nimport { is } from 'immutable';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ImmutablePureComponent = function (_React$Component) {\n  _inherits(ImmutablePureComponent, _React$Component);\n\n  function ImmutablePureComponent() {\n    _classCallCheck(this, ImmutablePureComponent);\n\n    return _possibleConstructorReturn(this, (ImmutablePureComponent.__proto__ || Object.getPrototypeOf(ImmutablePureComponent)).apply(this, arguments));\n  }\n\n  _createClass(ImmutablePureComponent, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var _this2 = this;\n\n      var nextState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var state = this.state || {};\n      return !(this.updateOnProps || Object.keys(_extends({}, nextProps, this.props))).every(function (p) {\n        return is(nextProps[p], _this2.props[p]);\n      }) || !(this.updateOnStates || Object.keys(_extends({}, nextState, state))).every(function (s) {\n        return is(nextState[s], state[s]);\n      });\n    }\n  }]);\n\n  return ImmutablePureComponent;\n}(React.Component);\n\nexport { ImmutablePureComponent };\nexport default ImmutablePureComponent;","map":null,"metadata":{},"sourceType":"module"}